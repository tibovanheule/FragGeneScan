.TH "src/hmm.h" 3 "Wo 17 Jun 2020" "Version 0.1" "FragScanTibo" \" -*- nroff -*-
.ad l
.nh
.SH NAME
src/hmm.h
.SH SYNOPSIS
.br
.PP
.SS "Klassen"

.in +1c
.ti -1c
.RI "struct \fBHMM\fP"
.br
.ti -1c
.RI "struct \fBTRAIN\fP"
.br
.in -1c
.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBA\fP   0"
.br
.ti -1c
.RI "#define \fBC\fP   1"
.br
.ti -1c
.RI "#define \fBG\fP   2"
.br
.ti -1c
.RI "#define \fBT\fP   3"
.br
.ti -1c
.RI "#define \fBNUM_STATE\fP   29"
.br
.ti -1c
.RI "#define \fBNOSTATE\fP   \-1"
.br
.ti -1c
.RI "#define \fBS_STATE\fP   0"
.br
.ti -1c
.RI "#define \fBE_STATE\fP   1"
.br
.ti -1c
.RI "#define \fBR_STATE\fP   2"
.br
.ti -1c
.RI "#define \fBS_STATE_1\fP   3"
.br
.ti -1c
.RI "#define \fBE_STATE_1\fP   4"
.br
.ti -1c
.RI "#define \fBM1_STATE\fP   5"
.br
.ti -1c
.RI "#define \fBM2_STATE\fP   6"
.br
.ti -1c
.RI "#define \fBM3_STATE\fP   7"
.br
.ti -1c
.RI "#define \fBM4_STATE\fP   8"
.br
.ti -1c
.RI "#define \fBM5_STATE\fP   9"
.br
.ti -1c
.RI "#define \fBM6_STATE\fP   10"
.br
.ti -1c
.RI "#define \fBM1_STATE_1\fP   11"
.br
.ti -1c
.RI "#define \fBM2_STATE_1\fP   12"
.br
.ti -1c
.RI "#define \fBM3_STATE_1\fP   13"
.br
.ti -1c
.RI "#define \fBM4_STATE_1\fP   14"
.br
.ti -1c
.RI "#define \fBM5_STATE_1\fP   15"
.br
.ti -1c
.RI "#define \fBM6_STATE_1\fP   16"
.br
.ti -1c
.RI "#define \fBI1_STATE\fP   17"
.br
.ti -1c
.RI "#define \fBI2_STATE\fP   18"
.br
.ti -1c
.RI "#define \fBI3_STATE\fP   19"
.br
.ti -1c
.RI "#define \fBI4_STATE\fP   20"
.br
.ti -1c
.RI "#define \fBI5_STATE\fP   21"
.br
.ti -1c
.RI "#define \fBI6_STATE\fP   22"
.br
.ti -1c
.RI "#define \fBI1_STATE_1\fP   23"
.br
.ti -1c
.RI "#define \fBI2_STATE_1\fP   24"
.br
.ti -1c
.RI "#define \fBI3_STATE_1\fP   25"
.br
.ti -1c
.RI "#define \fBI4_STATE_1\fP   26"
.br
.ti -1c
.RI "#define \fBI5_STATE_1\fP   27"
.br
.ti -1c
.RI "#define \fBI6_STATE_1\fP   28"
.br
.ti -1c
.RI "#define \fBTR_MM\fP   0"
.br
.ti -1c
.RI "#define \fBTR_MI\fP   1"
.br
.ti -1c
.RI "#define \fBTR_MD\fP   2"
.br
.ti -1c
.RI "#define \fBTR_II\fP   3"
.br
.ti -1c
.RI "#define \fBTR_IM\fP   4"
.br
.ti -1c
.RI "#define \fBTR_DD\fP   5"
.br
.ti -1c
.RI "#define \fBTR_DM\fP   6"
.br
.ti -1c
.RI "#define \fBTR_GE\fP   7"
.br
.ti -1c
.RI "#define \fBTR_GG\fP   8"
.br
.ti -1c
.RI "#define \fBTR_ER\fP   9"
.br
.ti -1c
.RI "#define \fBTR_RS\fP   10"
.br
.ti -1c
.RI "#define \fBTR_RR\fP   11"
.br
.ti -1c
.RI "#define \fBTR_ES\fP   12"
.br
.ti -1c
.RI "#define \fBTR_ES1\fP   13"
.br
.in -1c
.SS "Functies"

.in +1c
.ti -1c
.RI "int \fBget_prob_from_cg\fP (\fBHMM\fP *hmm, \fBTRAIN\fP *train, char *O)"
.br
.ti -1c
.RI "void \fBget_train_from_file\fP (char *filename, \fBHMM\fP *hmm_ptr, char *mfilename, char *mfilename1, char *nfilename, char *sfilename, char *pfilename, char *s1filename, char *p1filename, char *dfilename, \fBTRAIN\fP *train_ptr)"
.br
.ti -1c
.RI "void \fBviterbi\fP (\fBHMM\fP *hmm_ptr, \fBTRAIN\fP *train_ptr, char *O, FILE *out_filename, FILE *log_filename, FILE *dna_filename, char *head, int metagene, int cg, int format)"
.br
.ti -1c
.RI "void \fBget_protein\fP (char *dna, char *protein, int strand, int whole_genome)"
.br
.ti -1c
.RI "void \fBget_rc_dna\fP (char *dna, char *dna1)"
.br
.in -1c
.SH "Gedetailleerde Beschrijving"
.PP 
This is the header file for the hmm datastructure\&. 
.SH "Documentatie van macro's"
.PP 
.SS "#define A   0"

.SS "#define C   1"

.SS "#define E_STATE   1"

.SS "#define E_STATE_1   4"

.SS "#define G   2"

.SS "#define I1_STATE   17"

.SS "#define I1_STATE_1   23"

.SS "#define I2_STATE   18"

.SS "#define I2_STATE_1   24"

.SS "#define I3_STATE   19"

.SS "#define I3_STATE_1   25"

.SS "#define I4_STATE   20"

.SS "#define I4_STATE_1   26"

.SS "#define I5_STATE   21"

.SS "#define I5_STATE_1   27"

.SS "#define I6_STATE   22"

.SS "#define I6_STATE_1   28"

.SS "#define M1_STATE   5"

.SS "#define M1_STATE_1   11"

.SS "#define M2_STATE   6"

.SS "#define M2_STATE_1   12"

.SS "#define M3_STATE   7"

.SS "#define M3_STATE_1   13"

.SS "#define M4_STATE   8"

.SS "#define M4_STATE_1   14"

.SS "#define M5_STATE   9"

.SS "#define M5_STATE_1   15"

.SS "#define M6_STATE   10"

.SS "#define M6_STATE_1   16"

.SS "#define NOSTATE   \-1"

.SS "#define NUM_STATE   29"
Total number of states, mainly used in for loops\&. 
.SS "#define R_STATE   2"

.SS "#define S_STATE   0"

.SS "#define S_STATE_1   3"

.SS "#define T   3"

.SS "#define TR_DD   5"

.SS "#define TR_DM   6"

.SS "#define TR_ER   9"

.SS "#define TR_ES   12"

.SS "#define TR_ES1   13"

.SS "#define TR_GE   7"

.SS "#define TR_GG   8"

.SS "#define TR_II   3"

.SS "#define TR_IM   4"

.SS "#define TR_MD   2"

.SS "#define TR_MI   1"

.SS "#define TR_MM   0"

.SS "#define TR_RR   11"

.SS "#define TR_RS   10"

.SH "Documentatie van functies"
.PP 
.SS "int get_prob_from_cg (\fBHMM\fP * hmm, \fBTRAIN\fP * train, char * O)"

.SS "void get_protein (char * dna, char * protein, int strand, int whole_genome)"
Get a protein of dna if Whole_genome equals to zero, then we want a short read and stop early\&. 
.SS "void get_rc_dna (char * dna, char * dna1)"
copies dna to dna1 in reverse\&. and 
.SS "void get_train_from_file (char * filename, \fBHMM\fP * hmm_ptr, char * mfilename, char * mfilename1, char * nfilename, char * sfilename, char * pfilename, char * s1filename, char * p1filename, char * dfilename, \fBTRAIN\fP * train_ptr)"
Reads files\&.
.IP "1." 4
Reads trasition file and store in hmm datastructure 
.PP

.SS "void viterbi (\fBHMM\fP * hmm_ptr, \fBTRAIN\fP * train_ptr, char * O, FILE * out_filename, FILE * log_filename, FILE * dna_filename, char * head, int metagene, int cg, int format)"

.SH "Auteur"
.PP 
Automatisch gegenereerd door Doxygen voor FragScanTibo uit de programmatekst\&.
